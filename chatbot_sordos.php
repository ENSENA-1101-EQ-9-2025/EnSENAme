<?php
// Chatbot inteligente con informaci√≥n sobre sordera
// Integraci√≥n con info_sordos_api.php

class ChatbotSordos {
    private $palabras_clave = [
        'definicion' => ['qu√© es sordera', 'definici√≥n sordera', 'tipos sordera', 'sordo', 'sorda'],
        'causas_principales' => ['causas sordera', 'por qu√© sordera', 'c√≥mo se produce', 'origen sordera', 'gen√©tica', 'cong√©nito', 'hereditario'],
        'grados_perdida' => ['grados', 'niveles', 'decibeles', 'leve', 'moderada', 'severa', 'profunda'],
        'cultura_sorda' => ['cultura sorda', 'comunidad sorda', 'identidad sorda', 'valores'],
        'lengua_se√±as_colombiana' => ['LSC', 'lengua de se√±as', 'se√±as colombiana', 'lenguaje se√±as', 'colombiano'],
        'tecnologias_apoyo' => ['aud√≠fono', 'implante coclear', 'tecnolog√≠a', 'ayuda auditiva', 'dispositivos'],
        'inclusion_educativa' => ['educaci√≥n', 'inclusi√≥n', 'escuela', 'aprendizaje', 'biling√ºe'],
        'mitos_realidades' => ['mito', 'verdad', 'realidad', 'falso', 'cierto'],
        'datos_estadisticos' => ['estad√≠sticas', 'n√∫meros', 'cu√°ntos', 'poblaci√≥n', 'datos'],
        'como_comunicarse' => ['c√≥mo comunicar', 'hablar con', 'comunicaci√≥n', 'consejos', 'tips']
    ];
    
    private $respuestas_generales = [
        'saludo' => '¬°Hola! Soy el asistente de EnSE√ëAme. Puedo ayudarte con informaci√≥n sobre sordera, LSC y la comunidad sorda. ¬øEn qu√© te puedo ayudar?',
        'despedida' => '¬°Hasta luego! Recuerda que siempre puedes preguntarme sobre sordera y lengua de se√±as. ¬°Que tengas un buen d√≠a!',
        'no_entiendo' => 'No estoy seguro de entender tu pregunta. Puedo ayudarte con informaci√≥n sobre: causas de sordera, LSC, cultura sorda, tecnolog√≠as de apoyo, educaci√≥n inclusiva y m√°s. ¬øPodr√≠as ser m√°s espec√≠fico?',
        'agradecimiento' => '¬°De nada! Me alegra poder ayudarte a aprender m√°s sobre la comunidad sorda y la LSC. ¬øHay algo m√°s en lo que pueda ayudarte?'
    ];
    
    public function procesarMensaje($mensaje) {
        $mensaje = strtolower(trim($mensaje));
        
        // Detectar tipo de mensaje
        if ($this->esSaludo($mensaje)) {
            return $this->respuestas_generales['saludo'];
        }
        
        if ($this->esDespedida($mensaje)) {
            return $this->respuestas_generales['despedida'];
        }
        
        if ($this->esAgradecimiento($mensaje)) {
            return $this->respuestas_generales['agradecimiento'];
        }
        
        // Buscar informaci√≥n espec√≠fica
        $seccion = $this->detectarSeccion($mensaje);
        if ($seccion) {
            return $this->obtenerInformacion($seccion, $mensaje);
        }
        
        // Si no se detecta intenci√≥n espec√≠fica, buscar en contenido
        $resultados = $this->buscarEnContenido($mensaje);
        if ($resultados) {
            return $resultados;
        }
        
        return $this->respuestas_generales['no_entiendo'];
    }
    
    private function esSaludo($mensaje) {
        $saludos = ['hola', 'buenos d√≠as', 'buenas tardes', 'buenas noches', 'hey', 'hi'];
        foreach ($saludos as $saludo) {
            if (strpos($mensaje, $saludo) !== false) {
                return true;
            }
        }
        return false;
    }
    
    private function esDespedida($mensaje) {
        $despedidas = ['adi√≥s', 'chao', 'hasta luego', 'nos vemos', 'bye', 'gracias'];
        foreach ($despedidas as $despedida) {
            if (strpos($mensaje, $despedida) !== false) {
                return true;
            }
        }
        return false;
    }
    
    private function esAgradecimiento($mensaje) {
        $agradecimientos = ['gracias', 'thank you', 'excelente', 'perfecto', 'muy bien'];
        foreach ($agradecimientos as $agradecimiento) {
            if (strpos($mensaje, $agradecimiento) !== false) {
                return true;
            }
        }
        return false;
    }
    
    private function detectarSeccion($mensaje) {
        foreach ($this->palabras_clave as $seccion => $palabras) {
            foreach ($palabras as $palabra) {
                if (strpos($mensaje, $palabra) !== false) {
                    return $seccion;
                }
            }
        }
        return null;
    }
    
    private function obtenerInformacion($seccion, $mensaje_original = '') {
        try {
            // Llamar a la API interna
            $url = __DIR__ . '/info_sordos_api.php';
            
            // Simular petici√≥n GET
            $_GET['seccion'] = $seccion;
            ob_start();
            include $url;
            $response = ob_get_clean();
            
            $data = json_decode($response, true);
            
            if ($data && $data['success']) {
                return $this->formatearRespuesta($seccion, $data['data'], $mensaje_original);
            }
        } catch (Exception $e) {
            // Fallback si no se puede acceder a la API
            return $this->obtenerRespuestaFallback($seccion);
        }
        
        return $this->respuestas_generales['no_entiendo'];
    }
    
    private function formatearRespuesta($seccion, $data, $mensaje_original) {
        switch ($seccion) {
            case 'definicion':
                return "üîç **¬øQu√© es la sordera?**\n\n" . 
                       $data['descripcion'] . "\n\n" .
                       "**Tipos principales:**\n" .
                       "‚Ä¢ " . implode("\n‚Ä¢ ", array_column($data['tipos'], 'tipo')) . "\n\n" .
                       "¬øTe gustar√≠a saber m√°s sobre alg√∫n tipo espec√≠fico?";
            
            case 'causas_principales':
                return "üìä **Principales causas de sordera:**\n\n" .
                       "**Cong√©nitas (desde nacimiento):**\n" .
                       "‚Ä¢ Gen√©tica: 50-60% de los casos\n" .
                       "‚Ä¢ Infecciones maternas: 15-20%\n" .
                       "‚Ä¢ Complicaciones perinatales: 10-15%\n\n" .
                       "**Adquiridas (desarrolladas despu√©s):**\n" .
                       "‚Ä¢ Exposici√≥n a ruido intenso\n" .
                       "‚Ä¢ Infecciones (meningitis, otitis cr√≥nica)\n" .
                       "‚Ä¢ Medicamentos otot√≥xicos\n" .
                       "‚Ä¢ Traumatismos\n" .
                       "‚Ä¢ Envejecimiento\n\n" .
                       "¬øQuieres informaci√≥n espec√≠fica sobre alguna causa?";
            
            case 'lengua_se√±as_colombiana':
                return "ü§ü **Lengua de Se√±as Colombiana (LSC)**\n\n" .
                       "‚Ä¢ **Reconocida oficialmente** por las leyes 324/1996 y 982/2005\n" .
                       "‚Ä¢ **Usuarios:** Aproximadamente 450,000 personas en Colombia\n" .
                       "‚Ä¢ **Caracter√≠sticas:** Lengua visual-espacial completa con gram√°tica propia\n\n" .
                       "**Componentes de las se√±as:**\n" .
                       "‚Ä¢ Configuraci√≥n de mano\n" .
                       "‚Ä¢ Ubicaci√≥n en el cuerpo\n" .
                       "‚Ä¢ Movimiento\n" .
                       "‚Ä¢ Orientaci√≥n de palmas\n" .
                       "‚Ä¢ Expresi√≥n facial\n\n" .
                       "¬øTe interesa aprender m√°s sobre alg√∫n aspecto espec√≠fico de la LSC?";
            
            case 'cultura_sorda':
                return "üë• **Cultura Sorda**\n\n" .
                       $data['definicion'] . "\n\n" .
                       "**Valores principales:**\n" .
                       "‚Ä¢ Comunidad y apoyo mutuo\n" .
                       "‚Ä¢ Orgullo por la lengua de se√±as\n" .
                       "‚Ä¢ La sordera como diferencia cultural (no discapacidad)\n" .
                       "‚Ä¢ Preferencia por comunicaci√≥n visual\n" .
                       "‚Ä¢ Importancia de la educaci√≥n biling√ºe\n\n" .
                       "La comunidad sorda tiene una rica tradici√≥n cultural. ¬øQuieres saber m√°s?";
            
            case 'tecnologias_apoyo':
                return "üîß **Tecnolog√≠as de Apoyo**\n\n" .
                       "**Aud√≠fonos:** Amplifican el sonido (p√©rdida leve a severa)\n" .
                       "**Implantes cocleares:** Estimulan directamente el nervio auditivo (p√©rdida severa-profunda)\n" .
                       "**Sistemas FM:** Transmiten sonido directo (ideal para aulas)\n" .
                       "**Apps m√≥viles:** Traductores voz-texto, videollamadas, alertas visuales\n\n" .
                       "Cada tecnolog√≠a es √∫til seg√∫n el grado de p√©rdida auditiva. ¬øNecesitas informaci√≥n espec√≠fica?";
            
            case 'mitos_realidades':
                return "üí° **Mitos y Realidades sobre la Sordera**\n\n" .
                       "**MITO:** Las personas sordas no pueden conducir\n" .
                       "**REALIDAD:** Son conductores muy seguros gracias a su aguda percepci√≥n visual\n\n" .
                       "**MITO:** Todas las personas sordas leen labios\n" .
                       "**REALIDAD:** Solo 30-40% del espa√±ol es visible en labios\n\n" .
                       "**MITO:** La lengua de se√±as es universal\n" .
                       "**REALIDAD:** Cada pa√≠s tiene su propia lengua de se√±as\n\n" .
                       "¬øHay alg√∫n otro mito que hayas escuchado?";
            
            case 'como_comunicarse':
                return "üí¨ **C√≥mo comunicarse con personas sordas**\n\n" .
                       "**S√ç hacer:**\n" .
                       "‚úÖ Establecer contacto visual\n" .
                       "‚úÖ Hablar de frente\n" .
                       "‚úÖ Usar gestos naturales\n" .
                       "‚úÖ Ser paciente y respetuoso\n" .
                       "‚úÖ Preguntar su m√©todo preferido\n\n" .
                       "**NO hacer:**\n" .
                       "‚ùå Gritar (no ayuda)\n" .
                       "‚ùå Cubrir la boca al hablar\n" .
                       "‚ùå Dar la espalda\n" .
                       "‚ùå Asumir que leen labios\n\n" .
                       "La clave es el respeto y la paciencia. ¬øTienes alguna situaci√≥n espec√≠fica en mente?";
            
            default:
                return $this->generarRespuestaGenerica($data);
        }
    }
    
    private function generarRespuestaGenerica($data) {
        return "üìö Encontr√© informaci√≥n relevante sobre tu consulta. " .
               "Te recomiendo usar el sistema completo para obtener todos los detalles. " .
               "¬øHay algo espec√≠fico que te gustar√≠a saber?";
    }
    
    private function buscarEnContenido($mensaje) {
        // Simular b√∫squeda en la API
        try {
            $postData = json_encode(['buscar' => $mensaje]);
            
            // Aqu√≠ podr√≠as implementar una b√∫squeda real
            // Por ahora, devuelve una respuesta general
            return "üîç Busqu√© informaci√≥n sobre '$mensaje'. " .
                   "Puedes preguntarme sobre: causas de sordera, LSC, cultura sorda, " .
                   "tecnolog√≠as de apoyo, educaci√≥n inclusiva, mitos y realidades. " .
                   "¬øQu√© aspecto espec√≠fico te interesa m√°s?";
        } catch (Exception $e) {
            return null;
        }
    }
    
    private function obtenerRespuestaFallback($seccion) {
        $fallbacks = [
            'definicion' => 'La sordera es la p√©rdida total o parcial de la audici√≥n. Puede ser cong√©nita o adquirida, y se clasifica en conductiva, neurosensorial o mixta.',
            'causas_principales' => 'Las causas principales incluyen factores gen√©ticos (50-60%), infecciones, exposici√≥n a ruido, medicamentos otot√≥xicos y traumatismos.',
            'lengua_se√±as_colombiana' => 'La LSC es la lengua oficial de la comunidad sorda colombiana, reconocida por ley. Es una lengua visual-espacial completa con m√°s de 450,000 usuarios.',
            'cultura_sorda' => 'La cultura sorda es una identidad cultural basada en la lengua de se√±as, valores comunitarios y una perspectiva visual del mundo.',
            'tecnologias_apoyo' => 'Incluyen aud√≠fonos, implantes cocleares, sistemas FM y aplicaciones m√≥viles que facilitan la comunicaci√≥n y accesibilidad.',
            'como_comunicarse' => 'Lo m√°s importante es el contacto visual, hablar de frente, usar gestos naturales y ser paciente y respetuoso.'
        ];
        
        return $fallbacks[$seccion] ?? $this->respuestas_generales['no_entiendo'];
    }
    
    public function obtenerSugerencias() {
        return [
            "¬øQu√© es la sordera?",
            "¬øCu√°les son las causas de la sordera?",
            "¬øQu√© es la LSC?",
            "¬øC√≥mo comunicarse con personas sordas?",
            "Mitos sobre la sordera",
            "Tecnolog√≠as de apoyo auditivo",
            "Cultura de la comunidad sorda"
        ];
    }
}

// Funci√≥n para integrar con el chat existente
function procesarMensajeBot($mensaje, $usuario_id = null) {
    $chatbot = new ChatbotSordos();
    
    // Si el mensaje contiene ciertas palabras clave, activar el bot
    $palabras_activacion = ['sordera', 'sordo', 'sorda', 'lsc', 'se√±as', 'cultura sorda', 'aud√≠fono', 'implante'];
    $mensaje_lower = strtolower($mensaje);
    
    $activar_bot = false;
    foreach ($palabras_activacion as $palabra) {
        if (strpos($mensaje_lower, $palabra) !== false) {
            $activar_bot = true;
            break;
        }
    }
    
    // Tambi√©n activar si es una pregunta general
    if (strpos($mensaje_lower, '?') !== false || 
        strpos($mensaje_lower, 'qu√©') !== false ||
        strpos($mensaje_lower, 'c√≥mo') !== false ||
        strpos($mensaje_lower, 'por qu√©') !== false) {
        $activar_bot = true;
    }
    
    if ($activar_bot) {
        $respuesta = $chatbot->procesarMensaje($mensaje);
        return [
            'es_bot' => true,
            'respuesta' => $respuesta,
            'sugerencias' => $chatbot->obtenerSugerencias()
        ];
    }
    
    return null; // No es una consulta para el bot
}

// Si se llama directamente para pruebas
if (isset($_GET['test'])) {
    header('Content-Type: application/json');
    
    $chatbot = new ChatbotSordos();
    $mensaje = $_GET['mensaje'] ?? '¬øQu√© es la sordera?';
    
    $respuesta = $chatbot->procesarMensaje($mensaje);
    
    echo json_encode([
        'mensaje' => $mensaje,
        'respuesta' => $respuesta,
        'sugerencias' => $chatbot->obtenerSugerencias()
    ], JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE);
}
?>